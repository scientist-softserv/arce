web:
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: name
            operator: In
            values:
              - {{ template "app.web.name" . }}
        topologyKey: "kubernetes.io/hostname"
  replicas: 2
  resources:
    limits:
      memory: "4Gi"
      cpu: "400m"
    requests:
      memory: "2Gi"
      cpu: "200m"

worker:
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: name
            operator: In
            values:
              - {{ template "app.worker.name" . }}
        topologyKey: "kubernetes.io/hostname"
  replicas: 1
  resources:
    limits:
      memory: "3Gi"
      cpu: "100m"
    requests:
      memory: "1.5Gi"
      cpu: "50m"

solr:
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: name
            operator: In
            values:
              - {{ template "app.solr.name" . }}
        topologyKey: "kubernetes.io/hostname"
  replicas: 1
  resources:
    limits:
      memory: "8Gi"
      cpu: "400m"
    requests:
      memory: "4Gi"
      cpu: "200m"

  enabled: false
  image:
    repository: ghcr.io/scientist-softserv/arce/solr
    tag: latest
  imagePullSecrets:
    - name: github

postgresql:
  enabled: true
  postgresqlDatabase: arce_production
  postgresqlUsername: postgres
  # Only used when internal PG is disabled
  # postgresqlHost: postgres
  postgresqlPassword: $POSTGRES_PASSWORD
  # postgresqlPort: 5432
  persistence:
    enabled: true
    size: 40Gi

rails:
  image:
    repository: ghcr.io/scientist-softserv/arce
    tag: latest
  imagePullSecrets:
    - name: github
  shared:
    storage:
      size: 4Gi
      className: efs-sc

ingress:
  enabled: true
  hosts:
    - arce-web.notch8.cloud
    - archive.arce.org
    - archives.arce.org
  annotations: {
    kubernetes.io/ingress.class: "nginx",
    nginx.ingress.kubernetes.io/proxy-body-size: "0",
    cert-manager.io/cluster-issuer: letsencrypt-prod
  }
  tlsSecretName: arce-prod-tls

env:
  configmap:
    NAME: arce
    CONFDIR: "/home/app/webapp/solr/conf"
    DATABASE_ADAPTER: postgresql
    IN_DOCKER: "true"
    MAIL_ADDRESS: smtp.sendgrid.net
    MAIL_AUTHENITCATION: "plain"
    MAIL_DOMAIN: arce.org
    MAIL_HOST: archives.arce.org
    MAIL_PASS: $MAIL_PASS
    MAIL_PORT: 587
    MAIL_TLS: "true"
    MAIL_USER: apikey
    PASSENGER_APP_ENV: production
    POSTGRES_DB: arce_production
    POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    POSTGRES_USER: postgres
    RAILS_ENV: production
    RAILS_LOG_TO_STDOUT: true
    RAILS_SERVE_STATIC_FILES: true
    SECRET_KEY_BASE: $SECRET_KEY_BASE
    SENTRY_DSN: https://630e2c2cb1f44396b7c49868079a58c1@o1008683.ingest.sentry.io/6745021
    SOLR_CONFIGSET_SOURCE_PATH: solr/conf
    SOLR_CONFIGSET: blacklight-core
    SOLR_CORE: blacklight-core
