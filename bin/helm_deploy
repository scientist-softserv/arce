#!/bin/bash

if [ -z "$1" ] || [ -z "$2" ]
then
    echo './bin/helm_deploy RELEASE_NAME NAMESPACE'
    exit 1
fi
release_name="${1}"
namespace="${2}"

DEPLOY_IMAGE="${DEPLOY_IMAGE:-ghcr.io/scientist-softserv/arce}"
SOLR_IMAGE="${SOLR_IMAGE:-ghcr.io/scientist-softserv/arce/solr}"
DEPLOY_TAG="${DEPLOY_TAG:-latest}"

# Extracting the environment value after "-"
environment=${release_name#*-}
deploy_file="${environment}-deploy"

ENV_FILE="./.env.${environment}"
ENCRYPTED_ENV_FILE=".env.${environment}.enc"
# DECRYPTED_ENV_FILE=".env.${environment}.dec"
# if there is not a env file like in ci
# create the file and then echo the
# ENCRYPTED_ENV_FILE and shovel it into the file

if [ ! -f "$ENV_FILE" ]; then
  # if there is not an env.staging file
  # create the blank file
  touch "./.env.${environment}"
  # cat the ENCRYPTED_ENV_FILE value set in github
  # and decrypt & it and shovel it into the ENV_FILE
  cat "$ENCRYPTED_ENV_FILE" | base64 -d > "./.env.${environment}"
fi

# cat "$ENCRYPTED_ENV_FILE" | base64 -d > "$DECRYPTED_ENV_FILE"

HELM_EXTRA_ARGS="--values ops/${deploy_file}.yaml"
# DEPLOY_TAG= <------------------------------- SET DEPLOY TAG
DRY_RUN_DEBUG="--dry-run --debug"


# Take the env file and export each key value pair
# so we can use it with envsubst in our deploy
while IFS='=' read -r key value; do
  export "$key=${value//\"/}"
  echo "$key=${value//\"/}"
done < <(grep -v '^#' "$ENV_FILE")

DOLLAR=$ envsubst <"ops/${deploy_file}.tmpl.yaml" >"ops/${deploy_file}.yaml"

helm upgrade \
    --install \
    --atomic \
    --timeout 15m0s \
    --set rails.image.repository="$DEPLOY_IMAGE" \
    --set rails.image.tag="$DEPLOY_TAG" \
    --set solr.image.repository="$SOLR_IMAGE" \
    --set solr.image.tag="$DEPLOY_TAG" \
    $HELM_EXTRA_ARGS \
    $DRY_RUN_DEBUG \
    --namespace="$namespace" \
    --create-namespace \
    "$release_name" \
    chart
