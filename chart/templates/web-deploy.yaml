---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "app.web.name" . }}
  labels:
    app: {{ template "app.name" . }}
    chart: {{ template "app.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: web
spec:
  replicas: {{ .Values.web.replicas }}
  selector:
    matchLabels:
      app: {{ template "app.name" . }}
      release: {{ .Release.Name }}
      component: web
  template:
    metadata:
      labels:
        app: {{ template "app.name" . }}
        release: {{ .Release.Name }}
        component: web
      annotations:
        checksum/rails-env-cm: {{ include (print $.Template.BasePath "/rails-env-cm.yaml") . | sha256sum }}
        checksum/rails-env-secret: {{ include (print $.Template.BasePath "/rails-env-secret.yaml") . | sha256sum }}
    spec:
      restartPolicy: Always
      {{- if .Values.rails.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml .Values.rails.imagePullSecrets }}
      {{- end }}
      initContainers:
        - name: load-solr-config
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ template "app.rails-env.name" . }}
            - secretRef:
                name: {{ template "app.rails-env.name" . }}
            {{- if .Values.solrExistingSecret }}
            - secretRef:
                name: {{ .Values.solrExistingSecret }}
            {{- end }}
          command:
            - sh
            - -c
            - >
              bin/solrcloud-upload-configset.sh /home/app/webapp/solr/conf &&
              bin/solrcloud-assign-configset.sh
        - name: setup-db
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ template "app.rails-env.name" . }}
            - secretRef:
                name: {{ template "app.rails-env.name" . }}
            {{- if .Values.solrExistingSecret }}
            - secretRef:
                name: {{ .Values.solrExistingSecret }}
            {{- end }}
            {{- if .Values.postgresExistingSecret }}
            - secretRef:
                name: {{ .Values.postgresExistingSecret }}
            {{- end }}
          command:
            - sh
            - -c
            - >
              bin/db-wait.sh $POSTGRES_HOST:$POSTGRES_PORT bundle exec rake db:prepare
      volumes:
        - name: shared
          persistentVolumeClaim:
            claimName: {{ template "app.rails-env.name" . }}-shared
      containers:
        - name: web
          image: {{ .Values.rails.image.repository }}:{{ .Values.rails.image.tag }}
          imagePullPolicy: IfNotPresent
          # Use sub-path for individual folders
          volumeMounts:
            - mountPath: /home/app/webapp/public/system
              name: shared
              subPath: system
          resources:
            requests:
              memory: "1Gi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 120
          envFrom:
            - configMapRef:
                name: {{ template "app.rails-env.name" . }}
            - secretRef:
                name: {{ template "app.rails-env.name" . }}
